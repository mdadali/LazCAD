unit uPSI_CADScripInterface2D;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  {TPSImport_CADScripInterface2D = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 }
 
{ compile-time registration functions }
procedure SIRegister_CADScripInterface2D(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_CADScripInterface2D_Routines(S: TPSExec);

//procedure Register;

implementation


uses
   Graphics
  ,RTTIGrids
  ,PropEdits
  ,ObjectInspector
  ,ComCtrls
  ,CS4BaseTypes
  ,CS4Tasks
  ,CS4Shapes
  ,CADSys4
  ,CS4DXFModule
  ,cImportESSI
  ,CADDocument
  ,camh
  ,applicationh
  ,CADScripInterface2D
  ;
 
 
{procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_CADScripInterface2D]);
end; }

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_CADScripInterface2D(CL: TPSPascalCompiler);
begin
 //CADSys4
 CL.AddTypeS('TRealType', 'single');
 CL.AddTypeS('TPoint2D', 'record X : TRealType; Y : TRealType; W : TRealType; end');
 CL.AddTypeS('TRect2D', 'record FirstEdge : TPoint2D; SecondEdge: TPoint2D; end');
 CL.AddTypeS('TArcDirection', '(adClockwise, adCounterClockwise)');

 CL.AddDelphiFunction('function Point2D(X: TRealType; Y: TRealType): TPoint2D');
 CL.AddDelphiFunction('function CAD_Rect2D(var Left, Bottom, Right, Top: TRealType): TRect2D');

 //LazCAD
 CL.AddDelphiFunction('Procedure GetActiveDocument');
 CL.AddDelphiFunction('Procedure CAD_Regen');
 CL.AddDelphiFunction('procedure CAD_Clear');
 CL.AddDelphiFunction('procedure CAD_ZoomToExtentions');

 CL.AddDelphiFunction('function CAD_DrawLine2D(AID: longint;  var P0, P1: TPoint2D): integer');
 CL.AddDelphiFunction('function CAD_DrawEllipticalArc2D(AID: longint; P0, P1: TPoint2D; SA, EA: TRealType; ADirection: TArcDirection): longint');
 CL.AddDelphiFunction('function CAD_DrawCircularArc2D(AID: longint; var CP: TPoint2D; R, SA, EA: TRealType; ADirection: TArcDirection): longint');
 CL.AddDelphiFunction('function CAD_DrawCircle2D(AID: longint; var CP: TPoint2D; R, SA: TRealType; ADirection: TArcDirection): longint');
 CL.AddDelphiFunction('function CAD_DrawPolyline2D(AID: longint): longint');
 CL.AddDelphiFunction('function CAD_DrawFrame2D(AID: longint; var P0, P1: TPoint2D; ADirection: TArcDirection): longint');
 CL.AddDelphiFunction('function CAD_DrawPolygon2D(AID: longint; var ADirection: TArcDirection): longint');
 CL.AddDelphiFunction('function CAD_DrawBSPline2D(AID: longint): longInt');
 CL.AddDelphiFunction('function CAD_DrawEllipse2D(AID: longint; var P0, P1: TPoint2D; ACurvePrecision: word; ADirection: TArcDirection): longint');
 CL.AddDelphiFunction('function CAD_DrawSector2D(AID:  longint; var CP: TPoint2D; R, SA, EA: TRealType; ACurvePrecision: word; ADirection: TArcDirection): longint');
 CL.AddDelphiFunction('function CAD_DrawSegment2D(AID: longint; var CP: TPoint2D; R, SA, EA: TRealType; ACurvePrecision: word; ADirection: TArcDirection): longint');
 CL.AddDelphiFunction('function CAD_DrawSymetricSymbol2D(AID:  longint; var CP: TPoint2D; R, SA: TRealType; ACurvePrecision: word; ADirection: TArcDirection): longint');
 CL.AddDelphiFunction('function CAD_DrawASymetricSymbol2D(AID: longint; var P0, P1: TPoint2D; R, SA: TRealType; ACurvePrecision: word; ADirection: TArcDirection): longint');
 CL.AddDelphiFunction('function CAD_DrawText2D(AID: longint; var ARect2D: TRect2D; AHeight: TRealType; AStr: String): longint');
 CL.AddDelphiFunction('function CAD_DrawJustifiedVectText2D(AID: longint; AFontIndex: word; var ARect2D: TRect2D; AHeight: TRealType; AStr: string): longint');
 CL.AddDelphiFunction('function CAD_DrawBitmap2D(AID: longint; var P0, P1: TPoint2D; AFileName: string): longInt');

 CL.AddDelphiFunction('function CAD_Polyline2DAddPoint2D(AIDX: longint; var APoint2D: TPoint2D): longint): longInt');
 CL.AddDelphiFunction('function CAD_Polygon2DAddPoint2D(AIDX: longint; var APoint2D: TPoint2D): longint): longInt');
 CL.AddDelphiFunction('function CAD_BSpline2DAddPoint2D(AIDX: longint; var APoint2D: TPoint2D): longint): longInt');

 CL.AddDelphiFunction('Function CAD_SetColor( AID : integer; AColor : TColor) : integer');
 CL.AddDelphiFunction('Function CAD_IntToStr( AValue : integer) : string');
 CL.AddDelphiFunction('Procedure CAD_Refresh');
 CL.AddDelphiFunction('procedure CAD_Repaint');
 CL.AddDelphiFunction('Procedure CAD_DeleteObjects');
 CL.AddDelphiFunction('Procedure CAD_ProgressBarReset( AMin, AMax, AStep : integer)');
 CL.AddDelphiFunction('Procedure CAD_ProgressBarStep');
 CL.AddDelphiFunction('Function CAD_GetFiguresCount : integer');
 CL.AddDelphiFunction('Function CAD_GetFigureSP_X( AIndex : integer) : TRealType');
 CL.AddDelphiFunction('Function CAD_GetFigureSP_Y( AIndex : integer) : TRealType');
 CL.AddDelphiFunction('Function CAD_GetFigureEP_X( AIndex : integer) : TRealType');
 CL.AddDelphiFunction('Function CAD_GetFigureEP_Y( AIndex : integer) : TRealType');
 CL.AddDelphiFunction('Function CAD_GetFigureClassName( AIndex : integer) : string');
 CL.AddDelphiFunction('Function CAD_GetFigureKerfInfo( AIndex : integer) : word');
 CL.AddDelphiFunction('Function CAD_GetFigureProfilePointCount( AIndex : integer) : integer');
 CL.AddDelphiFunction('Function CAD_GetFigureProfilePoint( AFigureIndex, APointIndex : integer) : TPoint2D');
 CL.AddDelphiFunction('Function CAD_GetFigureProfilePointX( AFigureIndex, APointIndex : integer) : TRealType');
 CL.AddDelphiFunction('Function CAD_GetFigureProfilePointY( AFigureIndex, APointIndex : integer) : TRealType');
 //CL.AddDelphiFunction('Function CAD_GetObject( AIndex : integer) : TObject2D');
 //CL.AddDelphiFunction('Function CreateLine( AX, AY, BX, BY : single) : TLine2D');
 //CL.AddDelphiFunction('Function CAD_OpenIterator : TExclusiveGraphicObjIterator');
 //CL.AddDelphiFunction('Function CAD_CloseIterator : word');
 CL.AddDelphiFunction('Procedure CAD_ImportDXF');
 CL.AddDelphiFunction('Procedure CAD_ImportESSI');
 CL.AddDelphiFunction('Procedure CAD_ExportDXF');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_CADScripInterface2D_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@Point2D,                   'Point2D',     cdRegister);
 S.RegisterDelphiFunction(@CAD_Rect2D,                'CAD_Rect2D',     cdRegister);
 S.RegisterDelphiFunction(@Rect2D,                    'Rect2D',     cdRegister);
 S.RegisterDelphiFunction(@GetActiveDocument,         'GetActiveDocument', cdRegister);
 S.RegisterDelphiFunction(@CAD_Regen,                   'CAD_Regen', cdRegister);
 S.RegisterDelphiFunction(@CAD_Clear,                   'CAD_Clear', cdRegister);
 S.RegisterDelphiFunction(@CAD_ZoomToExtentions,        'CAD_ZoomToExtentions', cdRegister);

 S.RegisterDelphiFunction(@CAD_DrawLine2D,              'CAD_DrawLine2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawEllipticalArc2D,     'CAD_DrawEllipticalArc2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawCircularArc2D,       'CAD_DrawCircularArc2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawCircle2D,            'CAD_DrawCircle2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawPolyline2D,          'CAD_DrawPolyline2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawFrame2D,             'CAD_DrawFrame2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawPolygon2D,           'CAD_DrawPolygon2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawBSPline2D,           'CAD_DrawBSPline2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawEllipse2D,           'CAD_DrawEllipse2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawSector2D,            'CAD_DrawSector2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawSegment2D,           'CAD_DrawSegment2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawSymetricSymbol2D,    'CAD_DrawSymetricSymbol2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawASymetricSymbol2D,   'CAD_DrawASymetricSymbol2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawText2D,              'CAD_DrawText2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawJustifiedVectText2D, 'CAD_DrawJustifiedVectText2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_DrawBitmap2D,            'CAD_DrawBitmap2D', cdRegister);

 S.RegisterDelphiFunction(@CAD_Polyline2DAddPoint2D,    'CAD_Polyline2DAddPoint2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_Polygon2DAddPoint2D,     'CAD_Polygon2DAddPoint2D', cdRegister);
 S.RegisterDelphiFunction(@CAD_BSpline2DAddPoint2D,     'CAD_BSpline2DAddPoint2D', cdRegister);

 S.RegisterDelphiFunction(@CAD_SetColor,           'CAD_SetColor', cdRegister);
 S.RegisterDelphiFunction(@CAD_IntToStr,           'CAD_IntToStr', cdRegister);
 S.RegisterDelphiFunction(@CAD_Refresh,            'CAD_Refresh', cdRegister);
 S.RegisterDelphiFunction(@CAD_Repaint,            'CAD_Repaint', cdRegister);
 S.RegisterDelphiFunction(@CAD_DeleteObjects,      'CAD_DeleteObjects', cdRegister);
 S.RegisterDelphiFunction(@CAD_ProgressBarReset,   'CAD_ProgressBarReset', cdRegister);
 S.RegisterDelphiFunction(@CAD_ProgressBarStep,    'CAD_ProgressBarStep', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFiguresCount,    'CAD_GetFiguresCount', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFigureSP_X,      'CAD_GetFigureSP_X', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFigureSP_Y,      'CAD_GetFigureSP_Y', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFigureEP_X,      'CAD_GetFigureEP_X', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFigureEP_Y,      'CAD_GetFigureEP_Y', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFigureClassName, 'CAD_GetFigureClassName', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFigureKerfInfo,  'CAD_GetFigureKerfInfo', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFigureProfilePointCount, 'CAD_GetFigureProfilePointCount', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFigureProfilePoint, 'CAD_GetFigureProfilePoint', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFigureProfilePointX, 'CAD_GetFigureProfilePointX', cdRegister);
 S.RegisterDelphiFunction(@CAD_GetFigureProfilePointY, 'CAD_GetFigureProfilePointY', cdRegister);
 //S.RegisterDelphiFunction(@CAD_GetObject, 'CAD_GetObject', cdRegister);
 //S.RegisterDelphiFunction(@CreateLine, 'CreateLine', cdRegister);
 //S.RegisterDelphiFunction(@CAD_OpenIterator, 'CAD_OpenIterator', cdRegister);
 //S.RegisterDelphiFunction(@CAD_CloseIterator, 'CAD_CloseIterator', cdRegister);
 S.RegisterDelphiFunction(@CAD_ImportDXF, 'CAD_ImportDXF', cdRegister);
 S.RegisterDelphiFunction(@CAD_ImportESSI, 'CAD_ImportESSI', cdRegister);
 S.RegisterDelphiFunction(@CAD_ExportDXF, 'CAD_ExportDXF', cdRegister);
end;

 
 
{ TPSImport_CADScripInterface2D }
(*----------------------------------------------------------------------------*)
{procedure TPSImport_CADScripInterface2D.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_CADScripInterface2D(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_CADScripInterface2D.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_CADScripInterface2D_Routines(CompExec.Exec); // comment it if no routines
end;}
(*----------------------------------------------------------------------------*)
 
 
end.
