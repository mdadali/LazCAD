unit uPSI_CommonUtils;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_CommonUtils = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_CommonUtils(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_CommonUtils_Routines(S: TPSExec);

procedure Register;

implementation


uses
   {$IFDEF Windows}
   windows,
   {$ENDIF}
   Forms
  ,Math
  ,Dialogs
  ,Graphics
  ,LCLType
  ,LCLVersion
  ,versiontypes
  ,versionresource
  ,interfaces
  ,LCLPlatformDef
  ,CommonUtils
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_CommonUtils]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_CommonUtils(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('ErrStrToInt','LongInt').SetInt( - 999999);
 CL.AddConstantN('ErrCharIdxNotFound','LongInt').SetInt( - 500);
 CL.AddConstantN('ErrSubStr','String').SetString( 'SubStringError');
 CL.AddDelphiFunction('Function cuRGBToColor( R, G, B : byte) : TColor');
 CL.AddDelphiFunction('Function cuEncodeStr( AStr : string) : string');
 CL.AddDelphiFunction('Function cuDecodeStr( AStr : string) : string');
 //CL.AddDelphiFunction('Function cuStrToWChar( ASource : string) : PWideChar');
 CL.AddDelphiFunction('Function cuFileIsNamed( AFileName, InvalidFileName : string) : boolean');
 CL.AddDelphiFunction('Function cuSubString( AStr : string; startPos, endPos : integer) : string');
 CL.AddDelphiFunction('Function cuConvStrToInt( AStr : string) : Integer');
 CL.AddDelphiFunction('Function cuStrLength( AStr : string) : Integer');
 CL.AddDelphiFunction('Function cuCharIndex( AStr : string; AChar : char) : integer');
 CL.AddDelphiFunction('Function cuCharCount( AStr : string; AChar : char) : integer');
 CL.AddDelphiFunction('Function cuSignIdx( AStr : string) : integer');
 CL.AddDelphiFunction('Function cuSqrt( AValue : single) : single');
 CL.AddDelphiFunction('Function cuSqr( AValue : single) : single');
 CL.AddDelphiFunction('Function cuPi : single');
 CL.AddDelphiFunction('Function cuDegToRad( AAngle : single) : single');
 CL.AddDelphiFunction('Function cuRadToDeg( AAngle : single) : single');
 CL.AddDelphiFunction('Function cuGetAngleFromPoints( Ax1, Ay1, Ax2, Ay2 : single) : single');
 CL.AddDelphiFunction('Function cuPointsDistance2D( ex, sx, ey, sy : single) : single');
 CL.AddDelphiFunction('Procedure cuSwapPoints( var Ax1 : single; var Ay1 : single; var Ax2 : single; var Ay2 : single)');
 CL.AddDelphiFunction('Procedure cuSwapAngle( var AAngle1 : single; var AAngle2 : single)');
 CL.AddDelphiFunction('Procedure cuGetDirList( Path : string; DirList : TStrings)');
 CL.AddDelphiFunction('Procedure cuListFileDir( Path : string; Ext : string; FileList : TStrings)');
 CL.AddDelphiFunction('Function cuFileExt( AFileName : string) : string');
 CL.AddDelphiFunction('Function cuFileName( AFileName : string) : string');
 CL.AddDelphiFunction('Function cuFileNameFileExt( AFileName : string) : string');
 CL.AddDelphiFunction('Function cuFilePath( AFileName : string) : string');
 CL.AddDelphiFunction('Function cuAppFileName : string');
 CL.AddDelphiFunction('Function cuAppFileNameFileExt : string');
 CL.AddDelphiFunction('Function cuAppPath : string');
 CL.AddDelphiFunction('Function cuAppFullPath : string');
 CL.AddDelphiFunction('Function cuOpenFileDialog( AFilter, AInitialDir : string) : string');
 CL.AddDelphiFunction('Function cuSaveFileDialog( AFilter, AInitialDir : string) : string');
 CL.AddDelphiFunction('Function GetProgramVersion : string');
 CL.AddDelphiFunction('Function GetLazarusVersion : string');
 CL.AddDelphiFunction('Function GetFPCVersion : string');
 CL.AddDelphiFunction('Function ReadOSReleaseFile : string');
 CL.AddDelphiFunction('Function ReadFileToString( const AFileName : string) : string');
 CL.AddDelphiFunction('Function GetOSInfo : string');
 CL.AddDelphiFunction('Function GetLCLWidgetSet : string');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_CommonUtils_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@cuRGBToColor, 'cuRGBToColor', cdRegister);
 S.RegisterDelphiFunction(@cuEncodeStr, 'cuEncodeStr', cdRegister);
 S.RegisterDelphiFunction(@cuDecodeStr, 'cuDecodeStr', cdRegister);
 S.RegisterDelphiFunction(@cuStrToWChar, 'cuStrToWChar', cdRegister);
 S.RegisterDelphiFunction(@cuFileIsNamed, 'cuFileIsNamed', cdRegister);
 S.RegisterDelphiFunction(@cuSubString, 'cuSubString', cdRegister);
 S.RegisterDelphiFunction(@cuConvStrToInt, 'cuConvStrToInt', cdRegister);
 S.RegisterDelphiFunction(@cuStrLength, 'cuStrLength', cdRegister);
 S.RegisterDelphiFunction(@cuCharIndex, 'cuCharIndex', cdRegister);
 S.RegisterDelphiFunction(@cuCharCount, 'cuCharCount', cdRegister);
 S.RegisterDelphiFunction(@cuSignIdx, 'cuSignIdx', cdRegister);
 S.RegisterDelphiFunction(@cuSqrt, 'cuSqrt', cdRegister);
 S.RegisterDelphiFunction(@cuSqr, 'cuSqr', cdRegister);
 S.RegisterDelphiFunction(@cuPi, 'cuPi', cdRegister);
 S.RegisterDelphiFunction(@cuDegToRad, 'cuDegToRad', cdRegister);
 S.RegisterDelphiFunction(@cuRadToDeg, 'cuRadToDeg', cdRegister);
 S.RegisterDelphiFunction(@cuGetAngleFromPoints, 'cuGetAngleFromPoints', cdRegister);
 S.RegisterDelphiFunction(@cuPointsDistance2D, 'cuPointsDistance2D', cdRegister);
 S.RegisterDelphiFunction(@cuSwapPoints, 'cuSwapPoints', cdRegister);
 S.RegisterDelphiFunction(@cuSwapAngle, 'cuSwapAngle', cdRegister);
 S.RegisterDelphiFunction(@cuGetDirList, 'cuGetDirList', cdRegister);
 S.RegisterDelphiFunction(@cuListFileDir, 'cuListFileDir', cdRegister);
 S.RegisterDelphiFunction(@cuFileExt, 'cuFileExt', cdRegister);
 S.RegisterDelphiFunction(@cuFileName, 'cuFileName', cdRegister);
 S.RegisterDelphiFunction(@cuFileNameFileExt, 'cuFileNameFileExt', cdRegister);
 S.RegisterDelphiFunction(@cuFilePath, 'cuFilePath', cdRegister);
 S.RegisterDelphiFunction(@cuAppFileName, 'cuAppFileName', cdRegister);
 S.RegisterDelphiFunction(@cuAppFileNameFileExt, 'cuAppFileNameFileExt', cdRegister);
 S.RegisterDelphiFunction(@cuAppPath, 'cuAppPath', cdRegister);
 S.RegisterDelphiFunction(@cuAppFullPath, 'cuAppFullPath', cdRegister);
 S.RegisterDelphiFunction(@cuOpenFileDialog, 'cuOpenFileDialog', cdRegister);
 S.RegisterDelphiFunction(@cuSaveFileDialog, 'cuSaveFileDialog', cdRegister);
 S.RegisterDelphiFunction(@GetProgramVersion, 'GetProgramVersion', cdRegister);
 S.RegisterDelphiFunction(@GetLazarusVersion, 'GetLazarusVersion', cdRegister);
 S.RegisterDelphiFunction(@GetFPCVersion, 'GetFPCVersion', cdRegister);
 S.RegisterDelphiFunction(@ReadOSReleaseFile, 'ReadOSReleaseFile', cdRegister);
 S.RegisterDelphiFunction(@ReadFileToString, 'ReadFileToString', cdRegister);
 S.RegisterDelphiFunction(@GetOSInfo, 'GetOSInfo', cdRegister);
 S.RegisterDelphiFunction(@GetLCLWidgetSet, 'GetLCLWidgetSet', cdRegister);
end;

 
 
{ TPSImport_CommonUtils }
(*----------------------------------------------------------------------------*)
procedure TPSImport_CommonUtils.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_CommonUtils(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_CommonUtils.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_CommonUtils_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
