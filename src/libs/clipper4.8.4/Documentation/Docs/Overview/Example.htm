<html>

<head>
    
  <script type="text/javascript" src="../../Scripts/jquery.js">
  </script>
    
  <script type="text/javascript" src="../../Scripts/SyntaxHighlighter/scripts/shCore.js">
  </script>
    
  <script type="text/javascript" src="../../Scripts/SyntaxHighlighter/scripts/shBrushDelphi.js">
  </script>
    
  <link type="text/css" rel="stylesheet" href="../../Scripts/SyntaxHighlighter/styles/shCore.css">
    
  <link type="text/css" rel="stylesheet" href="../../Scripts/SyntaxHighlighter/styles/shThemeDefault.css">
  

  <title>Example</title>  

  <link rel="stylesheet" href="../../styles/Default.css" type="text/css">

    
  <script type="text/javascript" src="../../Scripts/bootstrap.js">
  </script>
  
</head>

<body bgcolor="#FFFFFF">
    
  <!-- THIS FILE HAS BEEN AUTOMATICALLY PROCESSED FROM A SOURCE COPY -->
    
  <!-- DO NOT EDIT MANUALLY !!! -->
  
  <table class="Banner" cellspacing="0" cellpadding="0" border="1" bordercolorlight="#303080" bordercolordark="#7070B0">
    <tr>
      <td class="Banner" nowrap=""><a href="../_Body.htm" class="Banner"><img src="../../Images/_Home.gif" align="absmiddle">Home</a>
      </td>
      <td class="Banner" nowrap=""><a href="_Body.htm" class="Banner">Overview</a>
      </td>
      <td class="Banner" width="100%" align="right"><img src="../../Images/_Project_Logo.gif" align="absmiddle">
      </td>
    </tr>
  </table>
  <h1>Example</h1>
      
  
  <p class="Decl2">Delphi Code Sample:</p>

  
  
  <pre class="pascalcode">
  <strong>uses</strong>
    graphics32, clipper;
  
  ...
  	
  <strong>var</strong>
    sub, clp, sol: TPolygons;
  <strong>begin</strong>

    <span class="Comment">//set up the subject and clip polygons ...</span>
    setlength(sub, 3);
    sub[0] := GetEllipsePoints(IntRect(<span class="CPPNumeric">100</span>,<span class="CPPNumeric">100</span>,<span class="CPPNumeric">300</span>,<span class="CPPNumeric">300</span>));
    sub[1] := GetEllipsePoints(IntRect(<span class="CPPNumeric">125</span>,<span class="CPPNumeric">130</span>,<span class="CPPNumeric">275</span>,<span class="CPPNumeric">180</span>));
    sub[2] := GetEllipsePoints(IntRect(<span class="CPPNumeric">125</span>,<span class="CPPNumeric">220</span>,<span class="CPPNumeric">275</span>,<span class="CPPNumeric">270</span>));
	
    setlength(clp, 1);
    clp[0] := GetEllipsePoints(IntRect(<span class="CPPNumeric">140</span>,<span class="CPPNumeric">70</span>,<span class="CPPNumeric">220</span>,<span class="CPPNumeric">320</span>));

    <span class="Comment">//display the subject and clip polygons ...</span>
    DrawPolygons(img.Bitmap, sub, <span class="CPPNumeric">0x8033FFFF</span>);
    DrawPolygons(img.Bitmap, clp, <span class="CPPNumeric">0x80FFFF33</span>);
    
    <span class="Comment">//get the intersection of the subject and clip polygons ...</span>
    <strong>with</strong> TClipper.Create <strong>do</strong>
    <strong>try</strong>
      AddPolygons(sub, ptSubject);
      AddPolygons(clp, ptClip);
      Execute(ctIntersection, sol, pftEvenOdd, pftEvenOdd);
    <strong>finally</strong>
      free;
    <strong>end</strong>;
    
    <span class="Comment">//finally draw the intersection polygons ...</span>
    DrawPolygons(img.Bitmap, sol, <span class="CPPNumeric">0x40808080</span>);
  
  
  </pre>

  
  
  <p class="Decl2">C++ Code Sample:</p>

  
  
  <pre class="pascalcode">
  #include "clipper.hpp"
  
  ...

  <span class="Comment">//from clipper.hpp ...</span>
  <span class="Comment">//typedef long long long64;</span>
  <span class="Comment">//struct IntPoint {long64 X; long64 Y;};</span>
  <span class="Comment">//typedef std::vector&lt;IntPoint&gt; Polygon;</span>
  <span class="Comment">//typedef std::vector&lt;Polygon&gt; Polygons;</span>

  <strong>using namespace</strong> ClipperLib;


  <span class="Comment">//set up the subject and clip polygons ...</span>
  Polygons sub(<span class="CPPNumeric">3</span>);
  sub[0] = GetEllipsePoints(IntRect(<span class="CPPNumeric">100</span>,<span class="CPPNumeric">100</span>,<span class="CPPNumeric">300</span>,<span class="CPPNumeric">300</span>));
  sub[1] = GetEllipsePoints(IntRect(<span class="CPPNumeric">125</span>,<span class="CPPNumeric">130</span>,<span class="CPPNumeric">275</span>,<span class="CPPNumeric">180</span>));
  sub[2] = GetEllipsePoints(IntRect(<span class="CPPNumeric">125</span>,<span class="CPPNumeric">220</span>,<span class="CPPNumeric">275</span>,<span class="CPPNumeric">270</span>));

  Polygons clp(<span class="CPPNumeric">1</span>);
  clp[0] = GetEllipsePoints(IntRect(<span class="CPPNumeric">140</span>,<span class="CPPNumeric">70</span>,<span class="CPPNumeric">220</span>,<span class="CPPNumeric">320</span>));

  <span class="Comment">//display the subject and clip polygons ...</span>
  DrawPolygons(img->Bitmap, sub, <span class="CPPNumeric">0x8033FFFF</span>);
  DrawPolygons(img->Bitmap, clp, <span class="CPPNumeric">0x80FFFF33</span>);
  
  <span class="Comment">//get the intersection of the subject and clip polygons ...</span>
  Clipper clpr;
  clpr.AddPolygons(sub, ptSubject);
  clpr.AddPolygons(clp, ptClip);
  Polygons sol;
  clpr.Execute(ctIntersection, sol, pftEvenOdd, pftEvenOdd);

  <span class="Comment">//finally draw the intersection polygons ...</span>
  DrawPolygons(img->Bitmap, sol, <span class="CPPNumeric">0x40808080</span>);
  
  </pre>
  
  
  <p class="Decl2">C# Code Sample:</p>
  
  
  <pre class="pascalcode">
  ...
  <span class="CPPNumeric">using</span> ClipperLib;
	
  ...
  <span class="CPPNumeric">using</span> <span class="CSharp">Polygon</span> = <span class="CSharp">List</span>&lt;<span class="CSharp">IntPoint</span>&gt;;
  <span class="CPPNumeric">using</span> <span class="CSharp">Polygons</span> = <span class="CSharp">List</span>&lt;<span class="CSharp">List</span>&lt;<span class="CSharp">IntPoint</span>&gt;&gt;;
  
  ...
  <span class="CSharp">Polygons</span> subjs = <span class="CPPNumeric">new</span> <span class="CSharp">Polygons</span>(3);
  <span class="CSharp">Polygons</span> clips = <span class="CPPNumeric">new</span> <span class="CSharp">Polygons</span>(1);
  <span class="CSharp">Polygons</span> solution = <span class="CPPNumeric">new</span> <span class="CSharp">Polygons</span>();
	
  subjs.Add(GetEllipsePoints(<span class="CPPNumeric">new</span> <span class="CSharp">IntRect</span>(100,100,300,300)));
  subjs.Add(GetEllipsePoints(<span class="CPPNumeric">new</span> <span class="CSharp">IntRect</span>(125,130,275,180)));
  subjs.Add(GetEllipsePoints(<span class="CPPNumeric">new</span> <span class="CSharp">IntRect</span>(125,220,275,270)));
	  
  clips.Add(GetEllipsePoints(<span class="CPPNumeric">new</span> <span class="CSharp">IntRect</span>(140,70,220,320)));
	  
  DrawPolygons(subjs, 0x8033FFFF);
  DrawPolygons(clips, 0x80FFFF33);
	  
  <span class="CSharp">Clipper</span> c = <span class="CPPNumeric">new</span> <span class="CSharp">Clipper</span>();
  c.AddPolygons(subjs, <span class="CSharp">PolyType</span>.ptSubject);
  c.AddPolygons(clips, <span class="CSharp">PolyType</span>.ptClip);
  c.Execute(<span class="CSharp">ClipType</span>.ctIntersection, solution);
	
  DrawPolygons(solution, 0x40808080);
  
  </pre>
    
  <img src="../../Images/sample1.png" alt="" border="0">
  
  
    
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2012 Angus Johnson&nbsp; - &nbsp; Clipper version 4.8.4 &nbsp; - &nbsp; Help file built on 1-June-2012 <br><br> </p>
  
</body>


</html>